{"ast":null,"code":"import { Injectable, ComponentFactoryResolver, Component, Input, Output, EventEmitter, ViewChild, NgModule, defineInjectable, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nconst _c0 = [\"modalRoot\"];\n\nfunction ModalComponent_div_3_h4_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"h4\", 10);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.settings == null ? null : ctx_r2.settings.title);\n  }\n}\n\nfunction ModalComponent_div_3_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function ModalComponent_div_3_button_4_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r4.close();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 12);\n    ɵngcc0.ɵɵtext(2, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵattribute(\"aria-label\", (ctx_r3.settings == null ? null : ctx_r3.settings.cancelButtonLabel) || \"Close\");\n  }\n}\n\nfunction ModalComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(2, ModalComponent_div_3_h4_2_Template, 2, 1, \"h4\", 6);\n    ɵngcc0.ɵɵprojection(3);\n    ɵngcc0.ɵɵtemplate(4, ModalComponent_div_3_button_4_Template, 3, 1, \"button\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 8);\n    ɵngcc0.ɵɵprojection(6, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"div\", 9);\n    ɵngcc0.ɵɵprojection(8, 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.settings == null ? null : ctx_r1.settings.title);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx_r1.settings == null ? null : ctx_r1.settings.hideCloseButton));\n  }\n}\n\nconst _c1 = [[[\"modal-header\"]], [[\"modal-content\"]], [[\"modal-footer\"]]];\n\nconst _c2 = function (a0) {\n  return {\n    display: a0\n  };\n};\n\nconst _c3 = function (a0) {\n  return {\n    \"fade\": a0\n  };\n};\n\nconst _c4 = function (a0) {\n  return {\n    \"modal-dialog-centered\": a0\n  };\n};\n\nconst _c5 = [\"modal-header\", \"modal-content\", \"modal-footer\"];\nconst _c6 = [\"*\"];\n\nclass ModalManager {\n  /**\n   * @param {?} componentFactoryResolver\n   */\n  constructor(componentFactoryResolver) {\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.globalConfig = {\n      size: \"md\",\n      modalClass: '',\n      hideCloseButton: false,\n      centered: false,\n      backdrop: true,\n      animation: true,\n      keyboard: true,\n      closeOnOutsideClick: true,\n      backdropClass: \"modal-backdrop\"\n    };\n  }\n  /**\n   * @param {?} config\n   * @return {?}\n   */\n\n\n  set defaults(config) {\n    this.globalConfig = Object.assign(this.globalConfig, config);\n  }\n  /**\n   * @param {?} config\n   * @return {?}\n   */\n\n\n  setDefaults(config) {\n    this.globalConfig = Object.assign(this.globalConfig, config);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get defaults() {\n    return this.globalConfig;\n  }\n  /**\n   * @param {?} ref\n   * @return {?}\n   */\n\n\n  setRootViewContainerRef(ref) {\n    this.modalHost = ref;\n  }\n  /**\n   * @param {?} modalInstance\n   * @param {?=} settings\n   * @return {?}\n   */\n\n\n  open(modalInstance, settings) {\n    /** @type {?} */\n    let config = settings || {};\n\n    if (typeof modalInstance === \"object\") {\n      modalInstance.init(config);\n      modalInstance.open();\n      return modalInstance;\n    } else if (typeof modalInstance === \"function\") {\n      /** @type {?} */\n      let componentFactory = this.componentFactoryResolver.resolveComponentFactory(modalInstance);\n      this.modalHost.remove();\n      /** @type {?} */\n\n      let componentRef = this.modalHost.createComponent(componentFactory);\n      componentRef.instance['ModalComponent'].init(config);\n      componentRef.instance['close'] = this.closeFactory();\n      componentRef.instance['onClose'] = componentRef.instance['ModalComponent'].onClose;\n      componentRef.instance['onOpen'] = componentRef.instance['ModalComponent'].onOpen;\n      setTimeout(() => componentRef.instance['ModalComponent'].open());\n      return componentRef.instance;\n    }\n  }\n  /**\n   * @param {?} modalInstance\n   * @return {?}\n   */\n\n\n  close(modalInstance) {\n    modalInstance.close();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  closeFactory() {\n    /** @type {?} */\n    var _self = this;\n\n    return function () {\n      this['ModalComponent'].close();\n\n      _self.modalHost.remove();\n    };\n  }\n\n}\n\nModalManager.ɵfac = function ModalManager_Factory(t) {\n  return new (t || ModalManager)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver));\n};\n\nModalManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ModalManager,\n  factory: ModalManager.ɵfac,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nModalManager.ctorParameters = () => [{\n  type: ComponentFactoryResolver\n}];\n/** @nocollapse */\n\n\nModalManager.ngInjectableDef = defineInjectable({\n  factory: function ModalManager_Factory() {\n    return new ModalManager(inject(ComponentFactoryResolver));\n  },\n  token: ModalManager,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ModalManager, [{\n    type: Injectable,\n    args: [{\n      providedIn: \"root\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass ModalComponent {\n  /**\n   * @param {?} modalManager\n   */\n  constructor(modalManager) {\n    this.modalManager = modalManager;\n    this.onOpen = new EventEmitter(false);\n    this.onClose = new EventEmitter(false);\n    this.isOpened = false;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnInit() {\n    this.inputSettings = {\n      title: this.title,\n      size: this.size || \"md\",\n      modalClass: this.modalClass || '',\n      hideCloseButton: this.hideCloseButton || false,\n      centered: this.centered || false,\n      backdrop: this.backdrop || true,\n      animation: this.animation || true,\n      keyboard: this.keyboard || true,\n      closeOnOutsideClick: this.closeOnOutsideClick || true,\n      backdropClass: this.backdropClass || \"modal-backdrop\"\n    };\n  }\n  /**\n   * @param {?} config\n   * @return {?}\n   */\n\n\n  init(config) {\n    this.onOpen.observers = [];\n    this.onClose.observers = [];\n    this.settings = Object.assign({}, this.modalManager.defaults, this.inputSettings, config);\n    this.createBackDrop();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  open() {\n    if (this.isOpened) return;\n    document.body.appendChild(this.backdropElement);\n    document.body.classList.add(\"modal-open\");\n    this.isOpened = true;\n    window.setTimeout(() => {\n      this.modalRoot.nativeElement.classList.add('show');\n      this.modalRoot.nativeElement.focus();\n      this.onOpen.emit();\n    }, 100);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  close() {\n    if (!this.isOpened) return;\n    this.modalRoot.nativeElement.classList.remove('show');\n    document.body.removeChild(this.backdropElement);\n    document.body.className = document.body.className.replace(/modal-open\\b/, \"\");\n    window.setTimeout(() => {\n      this.isOpened = false;\n      this.onClose.emit();\n    }, 100);\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  preventClosing(event) {\n    event.stopPropagation();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  createBackDrop() {\n    this.backdropElement = document.createElement(\"div\");\n    this.backdropElement.classList.add(\"fade\");\n    this.backdropElement.classList.add(\"show\");\n\n    if (this.settings && this.settings.backdrop && this.settings.backdrop == true) {\n      this.backdropElement.classList.add(this.settings.backdropClass);\n    }\n  }\n\n}\n\nModalComponent.ɵfac = function ModalComponent_Factory(t) {\n  return new (t || ModalComponent)(ɵngcc0.ɵɵdirectiveInject(ModalManager));\n};\n\nModalComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ModalComponent,\n  selectors: [[\"modal\"]],\n  viewQuery: function ModalComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.modalRoot = _t.first);\n    }\n  },\n  inputs: {\n    title: \"title\",\n    size: \"size\",\n    modalClass: \"modalClass\",\n    hideCloseButton: \"hideCloseButton\",\n    centered: \"centered\",\n    backdrop: \"backdrop\",\n    animation: \"animation\",\n    keyboard: \"keyboard\",\n    closeOnOutsideClick: \"closeOnOutsideClick\",\n    backdropClass: \"backdropClass\"\n  },\n  outputs: {\n    onOpen: \"onOpen\",\n    onClose: \"onClose\"\n  },\n  ngContentSelectors: _c5,\n  decls: 4,\n  vars: 12,\n  consts: [[\"tabindex\", \"-1\", \"role\", \"dialog\", 1, \"modal\", 3, \"ngStyle\", \"ngClass\", \"keydown.esc\", \"click\"], [\"modalRoot\", \"\"], [3, \"ngClass\", \"click\"], [\"class\", \"modal-content\", \"tabindex\", \"0\", 4, \"ngIf\"], [\"tabindex\", \"0\", 1, \"modal-content\"], [1, \"modal-header\"], [\"class\", \"modal-title\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"close\", 3, \"click\", 4, \"ngIf\"], [1, \"modal-body\"], [1, \"modal-footer\"], [1, \"modal-title\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]],\n  template: function ModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"keydown.esc\", function ModalComponent_Template_div_keydown_esc_0_listener() {\n        return (ctx.settings == null ? null : ctx.settings.keyboard) ? ctx.close() : 0;\n      })(\"click\", function ModalComponent_Template_div_click_0_listener() {\n        return (ctx.settings == null ? null : ctx.settings.backdrop) !== \"static\" && (ctx.settings == null ? null : ctx.settings.closeOnOutsideClick) ? ctx.close() : 0;\n      });\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵlistener(\"click\", function ModalComponent_Template_div_click_2_listener($event) {\n        return ctx.preventClosing($event);\n      });\n      ɵngcc0.ɵɵtemplate(3, ModalComponent_div_3_Template, 9, 2, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(6, _c2, ctx.isOpened ? \"block\" : \"none\"))(\"ngClass\", ɵngcc0.ɵɵpureFunction1(8, _c3, ctx.settings == null ? null : ctx.settings.animation));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassMap(\"modal-dialog modal-\" + (ctx.settings == null ? null : ctx.settings.size) + \" \" + (ctx.settings == null ? null : ctx.settings.modalClass));\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(10, _c4, ctx.settings == null ? null : ctx.settings.centered));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isOpened);\n    }\n  },\n  directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass, ɵngcc1.NgIf],\n  styles: [\".modal-dialog-centered[_ngcontent-%COMP%] {\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-align: center;\\n    align-items: center;\\n    min-height: calc(100% - (0.5rem * 2));\\n  }\\n  @media (min-width: 576px) {\\n    .modal-dialog-centered[_ngcontent-%COMP%] {\\n      min-height: calc(100% - (1.75rem * 2));\\n    }\\n  }\"]\n});\n/** @nocollapse */\n\nModalComponent.ctorParameters = () => [{\n  type: ModalManager\n}];\n\nModalComponent.propDecorators = {\n  title: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }],\n  modalClass: [{\n    type: Input\n  }],\n  hideCloseButton: [{\n    type: Input\n  }],\n  centered: [{\n    type: Input\n  }],\n  backdrop: [{\n    type: Input\n  }],\n  animation: [{\n    type: Input\n  }],\n  keyboard: [{\n    type: Input\n  }],\n  closeOnOutsideClick: [{\n    type: Input\n  }],\n  backdropClass: [{\n    type: Input\n  }],\n  onOpen: [{\n    type: Output\n  }],\n  onClose: [{\n    type: Output\n  }],\n  modalRoot: [{\n    type: ViewChild,\n    args: [\"modalRoot\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ModalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'modal',\n      template: `<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" #modalRoot (keydown.esc)=\"settings?.keyboard ? close() : 0\" [ngStyle]=\"{ display: isOpened ? 'block' : 'none' }\" [ngClass]=\"{'fade': settings?.animation}\" (click)=\"settings?.backdrop !== 'static' && settings?.closeOnOutsideClick ? close() : 0\">\n    <div [class]=\"'modal-dialog modal-'+ settings?.size + ' ' + settings?.modalClass\" (click)=\"preventClosing($event)\" [ngClass]=\"{'modal-dialog-centered': settings?.centered}\">\n        <div class=\"modal-content\" tabindex=\"0\" *ngIf=\"isOpened\">\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\" *ngIf=\"settings?.title\">{{ settings?.title }}</h4>\n                <ng-content select=\"modal-header\"></ng-content>\n                <button *ngIf=\"!settings?.hideCloseButton\" type=\"button\" class=\"close\" [attr.aria-label]=\"settings?.cancelButtonLabel || 'Close'\" (click)=\"close()\"><span aria-hidden=\"true\">&times;</span></button>\n            </div>\n            <div class=\"modal-body\">\n                <ng-content select=\"modal-content\"></ng-content>\n            </div>\n            <div class=\"modal-footer\">\n                <ng-content select=\"modal-footer\"></ng-content>\n            </div>\n        </div>\n    </div>\n</div>`,\n      styles: [`.modal-dialog-centered {\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-align: center;\n    align-items: center;\n    min-height: calc(100% - (0.5rem * 2));\n  }\n  @media (min-width: 576px) {\n    .modal-dialog-centered {\n      min-height: calc(100% - (1.75rem * 2));\n    }\n  }`]\n    }]\n  }], function () {\n    return [{\n      type: ModalManager\n    }];\n  }, {\n    onOpen: [{\n      type: Output\n    }],\n    onClose: [{\n      type: Output\n    }],\n    title: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    modalClass: [{\n      type: Input\n    }],\n    hideCloseButton: [{\n      type: Input\n    }],\n    centered: [{\n      type: Input\n    }],\n    backdrop: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    closeOnOutsideClick: [{\n      type: Input\n    }],\n    backdropClass: [{\n      type: Input\n    }],\n    modalRoot: [{\n      type: ViewChild,\n      args: [\"modalRoot\"]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass ModalFooterComponent {\n  constructor() {}\n  /**\n   * @return {?}\n   */\n\n\n  ngOnInit() {}\n\n}\n\nModalFooterComponent.ɵfac = function ModalFooterComponent_Factory(t) {\n  return new (t || ModalFooterComponent)();\n};\n\nModalFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ModalFooterComponent,\n  selectors: [[\"modal-footer\"]],\n  ngContentSelectors: _c6,\n  decls: 1,\n  vars: 0,\n  template: function ModalFooterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nModalFooterComponent.ctorParameters = () => [];\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ModalFooterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'modal-footer',\n      template: `<ng-content></ng-content>`\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass ModalContentComponent {\n  constructor() {}\n  /**\n   * @return {?}\n   */\n\n\n  ngOnInit() {}\n\n}\n\nModalContentComponent.ɵfac = function ModalContentComponent_Factory(t) {\n  return new (t || ModalContentComponent)();\n};\n\nModalContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ModalContentComponent,\n  selectors: [[\"modal-content\"]],\n  ngContentSelectors: _c6,\n  decls: 1,\n  vars: 0,\n  template: function ModalContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nModalContentComponent.ctorParameters = () => [];\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ModalContentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'modal-content',\n      template: `<ng-content></ng-content>`\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass ModalHeaderComponent {\n  constructor() {}\n  /**\n   * @return {?}\n   */\n\n\n  ngOnInit() {}\n\n}\n\nModalHeaderComponent.ɵfac = function ModalHeaderComponent_Factory(t) {\n  return new (t || ModalHeaderComponent)();\n};\n\nModalHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ModalHeaderComponent,\n  selectors: [[\"modal-header\"]],\n  ngContentSelectors: _c6,\n  decls: 1,\n  vars: 0,\n  template: function ModalHeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nModalHeaderComponent.ctorParameters = () => [];\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ModalHeaderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'modal-header',\n      template: `<ng-content></ng-content>`\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass ModalModule {}\n\nModalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ModalModule\n});\nModalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ModalModule_Factory(t) {\n    return new (t || ModalModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ModalModule, {\n    declarations: function () {\n      return [ModalComponent, ModalFooterComponent, ModalContentComponent, ModalHeaderComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [ModalComponent, ModalFooterComponent, ModalContentComponent, ModalHeaderComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ModalModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [ModalComponent, ModalFooterComponent, ModalContentComponent, ModalHeaderComponent],\n      exports: [ModalComponent, ModalFooterComponent, ModalContentComponent, ModalHeaderComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport { ModalManager, ModalComponent, ModalModule, ModalContentComponent, ModalHeaderComponent, ModalFooterComponent };","map":{"version":3,"sources":["ng:/ngb-modal/lib/modal.service.ts","ng:/ngb-modal/lib/modal.component.ts","ng:/ngb-modal/lib/modal-footer.component.ts","ng:/ngb-modal/lib/modal-content.component.ts","ng:/ngb-modal/lib/modal-header.component.ts","ng:/ngb-modal/lib/modal.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, ViewChild, ComponentFactoryResolver, ComponentRef, ViewContainerRef } from '@angular/core';\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ModalManager {\n\n  private modalHost: ViewContainerRef;\n\n  private globalConfig : ModalConfig = {\n    size: \"md\",\n    modalClass: '',\n    hideCloseButton : false,\n    centered: false,\n    backdrop: true,\n    animation : true,\n    keyboard: true,\n    closeOnOutsideClick: true,\n    backdropClass: \"modal-backdrop\" \n  };\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  set defaults(config: ModalConfig) {\n    this.globalConfig = Object.assign(this.globalConfig, config);\n  }\n\n  setDefaults(config: ModalConfig){\n    this.globalConfig = Object.assign(this.globalConfig, config);    \n  }\n\n  get defaults() : ModalConfig {\n    return this.globalConfig;\n  }\n\n  setRootViewContainerRef(ref){\n    this.modalHost = ref;\n  }\n\n  open(modalInstance, settings?){\n    let config = settings || {};\n    if(typeof modalInstance === \"object\"){\n      modalInstance.init(config);\n      modalInstance.open();\n      return modalInstance;\n    }else if(typeof modalInstance === \"function\"){\n      let componentFactory = this.componentFactoryResolver.resolveComponentFactory(modalInstance);\n      this.modalHost.remove();\n      let componentRef = this.modalHost.createComponent(componentFactory);\n      componentRef.instance['ModalComponent'].init(config);\n      componentRef.instance['close'] = this.closeFactory();\n      componentRef.instance['onClose'] = componentRef.instance['ModalComponent'].onClose;\n      componentRef.instance['onOpen'] = componentRef.instance['ModalComponent'].onOpen;\n      setTimeout(() => componentRef.instance['ModalComponent'].open());\n     return componentRef.instance;\n    } \n  }\n\n  close(modalInstance){\n    modalInstance.close();\n  }\n\n  closeFactory(){\n    var _self = this;\n    return function() {\n      this['ModalComponent'].close();\n      _self.modalHost.remove();\n    }\n  }\n\n}\n\nexport interface ModalConfig {\n    title?: string,\n    size?: string | \"md\",\n    modalClass?: string | '',\n    hideCloseButton?: boolean | false,\n    centered?: boolean | false,\n    backdrop?: boolean | 'static' | true,\n    animation?: boolean | true,\n    keyboard?: boolean | true,\n    closeOnOutsideClick?: boolean | true,\n    backdropClass?: string | \"modal-backdrop\"\n}\n","import { Component, OnInit, Input, Output, OnDestroy, OnChanges, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { ModalManager } from './modal.service';\n\ndeclare var document: any;\n\n@Component({\n  selector: 'modal',\n  template: `<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" #modalRoot (keydown.esc)=\"settings?.keyboard ? close() : 0\" [ngStyle]=\"{ display: isOpened ? 'block' : 'none' }\" [ngClass]=\"{'fade': settings?.animation}\" (click)=\"settings?.backdrop !== 'static' && settings?.closeOnOutsideClick ? close() : 0\">\n    <div [class]=\"'modal-dialog modal-'+ settings?.size + ' ' + settings?.modalClass\" (click)=\"preventClosing($event)\" [ngClass]=\"{'modal-dialog-centered': settings?.centered}\">\n        <div class=\"modal-content\" tabindex=\"0\" *ngIf=\"isOpened\">\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\" *ngIf=\"settings?.title\">{{ settings?.title }}</h4>\n                <ng-content select=\"modal-header\"></ng-content>\n                <button *ngIf=\"!settings?.hideCloseButton\" type=\"button\" class=\"close\" [attr.aria-label]=\"settings?.cancelButtonLabel || 'Close'\" (click)=\"close()\"><span aria-hidden=\"true\">&times;</span></button>\n            </div>\n            <div class=\"modal-body\">\n                <ng-content select=\"modal-content\"></ng-content>\n            </div>\n            <div class=\"modal-footer\">\n                <ng-content select=\"modal-footer\"></ng-content>\n            </div>\n        </div>\n    </div>\n</div>`,\n  styles:[`.modal-dialog-centered {\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-align: center;\n    align-items: center;\n    min-height: calc(100% - (0.5rem * 2));\n  }\n  @media (min-width: 576px) {\n    .modal-dialog-centered {\n      min-height: calc(100% - (1.75rem * 2));\n    }\n  }`]\n})\nexport class ModalComponent implements OnInit {\n\n  //title of modal\n  @Input() title;\n\n  //size of modal. sm,lg,md\n  @Input() size;\n\n  //modalClass added to modal dialog\n  @Input() modalClass;\n\n  //hide close button\n  @Input() hideCloseButton;\n\n  //if modal is vertically centered\n  @Input() centered\n\n  //if backdrop is applied on modal\n  @Input() backdrop\n\n  //if true, animation is added to modal dialog\n  @Input() animation;\n\n  //listen to keyboard events\n  @Input() keyboard;\n\n  //close on outside click\n  @Input() closeOnOutsideClick;\n\n  //custom backdrop class\n  @Input() backdropClass;\n\n  @Output() public onOpen = new EventEmitter(false);\n  @Output() public onClose = new EventEmitter(false);\n \n\n  @ViewChild(\"modalRoot\") public modalRoot: ElementRef;\n   \n  public isOpened = false;\n  private inputSettings;\n  public settings;\n  private backdropElement: HTMLElement;\n\n  constructor(private modalManager : ModalManager) {\n  }\n\n  ngOnInit(){\n    this.inputSettings = {\n      title: this.title,\n      size: this.size || \"md\",\n      modalClass: this.modalClass || '',\n      hideCloseButton : this.hideCloseButton || false,\n      centered: this.centered || false,\n      backdrop: this.backdrop || true,\n      animation : this.animation || true,\n      keyboard: this.keyboard || true,\n      closeOnOutsideClick: this.closeOnOutsideClick || true,\n      backdropClass: this.backdropClass || \"modal-backdrop\"\n    }\n  }\n\n  init(config) {\n    this.onOpen.observers = [];\n    this.onClose.observers = [];\n    this.settings = Object.assign({}, this.modalManager.defaults, this.inputSettings, config);\n    this.createBackDrop();\n  }\n\n\n  open() {\n    if (this.isOpened)\n      return;\n    \n    document.body.appendChild(this.backdropElement);\n    document.body.classList.add(\"modal-open\");\n    this.isOpened = true;\n    window.setTimeout(() => {\n      this.modalRoot.nativeElement.classList.add('show');\n      this.modalRoot.nativeElement.focus();\n      this.onOpen.emit();\n    }, 100);\n  }\n\n  close() {\n    if (!this.isOpened)\n      return;\n\n    this.modalRoot.nativeElement.classList.remove('show');\n    document.body.removeChild(this.backdropElement);\n    document.body.className = document.body.className.replace(/modal-open\\b/, \"\");\n    window.setTimeout(() => {\n      this.isOpened = false;\n      this.onClose.emit();\n    }, 100);\n  }\n\n  public preventClosing(event: MouseEvent) {\n    event.stopPropagation();\n  }\n\n  private createBackDrop() {\n    this.backdropElement = document.createElement(\"div\");\n    this.backdropElement.classList.add(\"fade\");\n    this.backdropElement.classList.add(\"show\");\n    if (this.settings && this.settings.backdrop && this.settings.backdrop == true) {\n      this.backdropElement.classList.add(this.settings.backdropClass);\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modal-footer',\n  template:`<ng-content></ng-content>`\n})\nexport class ModalFooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modal-content',\n  template: `<ng-content></ng-content>`\n})\nexport class ModalContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modal-header',\n  template:`<ng-content></ng-content>`\n})\n\nexport class ModalHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ModalComponent } from './modal.component';\nimport { ModalFooterComponent } from \"./modal-footer.component\";\nimport { ModalContentComponent } from \"./modal-content.component\";\nimport { ModalHeaderComponent } from \"./modal-header.component\";\n\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ModalComponent, ModalFooterComponent, ModalContentComponent, ModalHeaderComponent],\n  exports: [ModalComponent, ModalFooterComponent, ModalContentComponent, ModalHeaderComponent]\n})\nexport class ModalModule {\n }\n"]},"metadata":{},"sourceType":"module"}