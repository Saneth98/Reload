{"ast":null,"code":"import { Component } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/validate.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/login.service\";\nvar I18N_0;\n\nif (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n  const MSG_EXTERNAL_loginEmail$$SRC_APP_COMPONENTS_LOGIN_LOGIN_COMPONENT_TS_1 = goog.getMsg(\"Email: {$startTagSpan}{$interpolation}{$closeTagSpan}\", {\n    \"startTagSpan\": \"\\uFFFD#8\\uFFFD\",\n    \"interpolation\": \"\\uFFFD0\\uFFFD\",\n    \"closeTagSpan\": \"\\uFFFD/#8\\uFFFD\"\n  });\n  I18N_0 = MSG_EXTERNAL_loginEmail$$SRC_APP_COMPONENTS_LOGIN_LOGIN_COMPONENT_TS_1;\n} else {\n  I18N_0 = \"\\u0DC0\\u0DD2\\u0DAF\\u0DCA\\u0DBA\\u0DD4\\u0DAD\\u0DCA \\u0DAD\\u0DD0\\u0DB4\\u0DD1\\u0DBD:\";\n}\n\nvar I18N_2;\n\nif (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n  const MSG_EXTERNAL_loginPassword$$SRC_APP_COMPONENTS_LOGIN_LOGIN_COMPONENT_TS_3 = goog.getMsg(\"Password:\");\n  I18N_2 = MSG_EXTERNAL_loginPassword$$SRC_APP_COMPONENTS_LOGIN_LOGIN_COMPONENT_TS_3;\n} else {\n  I18N_2 = \"\\u0DB8\\u0DD4\\u0DBB\\u0DB4\\u0DAF\\u0DBA\";\n}\n\nvar I18N_4;\n\nif (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n  const MSG_EXTERNAL_loginBtn$$SRC_APP_COMPONENTS_LOGIN_LOGIN_COMPONENT_TS_5 = goog.getMsg(\"Submit \");\n  I18N_4 = MSG_EXTERNAL_loginBtn$$SRC_APP_COMPONENTS_LOGIN_LOGIN_COMPONENT_TS_5;\n} else {\n  I18N_4 = \"\\u0D89\\u0DAF\\u0DD2\\u0DBB\\u0DD2\\u0DB4\\u0DAD\\u0DCA \\u0D9A\\u0DBB\\u0DB1\\u0DCA\\u0DB1\";\n}\n\nexport class LoginComponent {\n  constructor(validateService, route, service) {\n    this.validateService = validateService;\n    this.route = route;\n    this.service = service;\n    this.error = '';\n  }\n\n  ngOnInit() {}\n\n  login(email, password, check) {\n    if (email !== '' && password !== '') {\n      if (email === 'admin') {\n        // const user: UserObj = {} as UserObj;\n        // user.email = email;\n        // user.password = password;\n        // this.service.loginAdmin(user)\n        //   .subscribe((res: any) => {\n        //     sessionStorage.setItem('key', res.token);\n        //     if (res.value.type === 'admin') {\n        //       if (check){\n        //         localStorage.setItem('loginType', '1');\n        //       }\n        //       sessionStorage.setItem('loginType', '1');\n        //       this.validateService.login();\n        //       this.route.navigate(['admin']);\n        //     } else {\n        //       if (check){\n        //         localStorage.setItem('loginType', '2');\n        //       }\n        //       sessionStorage.setItem('loginType', '2');\n        //       this.validateService.login();\n        //       this.route.navigate(['driver']);\n        //     }\n        //   }, (err) => {\n        //     this.error = (`Code ${err.status}, Error was: ${err.error.errorMessage}`);\n        //   });\n        console.log(check);\n\n        if (check) {\n          localStorage.setItem('loginType', '1');\n        }\n\n        sessionStorage.setItem('loginType', '1');\n        this.validateService.login();\n        this.route.navigate(['admin']);\n      } else {\n        console.log(check);\n\n        if (check) {\n          localStorage.setItem('loginType', '2');\n        }\n\n        sessionStorage.setItem('loginType', '2');\n        this.validateService.login();\n        this.route.navigate(['driver']);\n      }\n    }\n\n    this.error = 'Values Cannot Be Empty';\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ValidateService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LoginService));\n};\n\nLoginComponent.ɵcmp = i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"login-box\"], [1, \"form-group\"], [\"for\", \"email\"], [1, \"error\"], [\"required\", \"\", \"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", \"name\", \"email\", 1, \"form-control\"], [\"loginEmail\", \"\"], [\"for\", \"pwd\"], [\"required\", \"\", \"type\", \"password\", \"id\", \"pwd\", \"placeholder\", \"Enter password\", \"name\", \"pswd\", 1, \"form-control\"], [\"loginPassword\", \"\"], [1, \"form-group\", \"form-check\"], [1, \"form-check-label\"], [\"type\", \"checkbox\", \"name\", \"remember\", 1, \"form-check-input\"], [\"check\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\");\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵelementStart(6, \"label\", 3);\n      i0.ɵɵi18nStart(7, I18N_0);\n      i0.ɵɵelement(8, \"span\", 4);\n      i0.ɵɵi18nEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5, 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 2);\n      i0.ɵɵelementStart(12, \"label\", 7);\n      i0.ɵɵi18n(13, I18N_2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 8, 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 10);\n      i0.ɵɵelementStart(17, \"label\", 11);\n      i0.ɵɵelement(18, \"input\", 12, 13);\n      i0.ɵɵtext(20, \" Remember me \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_21_listener() {\n        i0.ɵɵrestoreView(_r3);\n\n        const _r0 = i0.ɵɵreference(10);\n\n        const _r1 = i0.ɵɵreference(15);\n\n        const _r2 = i0.ɵɵreference(19);\n\n        return ctx.login(_r0.value, _r1.value, _r2.checked);\n      });\n      i0.ɵɵi18n(22, I18N_4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵi18nExp(ctx.error);\n      i0.ɵɵi18nApply(7);\n    }\n  },\n  styles: [\".login-box[_ngcontent-%COMP%] {\\r\\n  padding: 2%;\\r\\n  margin-top: 5%;\\r\\n  border-radius: 10px;\\r\\n  box-shadow: 0 12px 15px 0 rgba(0, 0, 0, .24), 0 17px 50px 0 rgba(0, 0, 0, .19)\\r\\n}\\r\\n.error[_ngcontent-%COMP%]{\\r\\n  color: red;\\r\\n  font-size: small;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLFdBQVc7RUFDWCxjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CO0FBQ0Y7QUFDQTtFQUNFLFVBQVU7RUFDVixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmxvZ2luLWJveCB7XHJcbiAgcGFkZGluZzogMiU7XHJcbiAgbWFyZ2luLXRvcDogNSU7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBib3gtc2hhZG93OiAwIDEycHggMTVweCAwIHJnYmEoMCwgMCwgMCwgLjI0KSwgMCAxN3B4IDUwcHggMCByZ2JhKDAsIDAsIDAsIC4xOSlcclxufVxyXG4uZXJyb3J7XHJcbiAgY29sb3I6IHJlZDtcclxuICBmb250LXNpemU6IHNtYWxsO1xyXG59XHJcbiJdfQ== */\"]\n});\n/*@__PURE__*/\n\n(function () {\n  i0.ɵsetClassMetadata(LoginComponent, [{\n    type: Component,\n    args: [{\n      selector: 'app-login',\n      templateUrl: './login.component.html',\n      styleUrls: ['./login.component.css']\n    }]\n  }], function () {\n    return [{\n      type: i1.ValidateService\n    }, {\n      type: i2.Router\n    }, {\n      type: i3.LoginService\n    }];\n  }, null);\n})();","map":{"version":3,"sources":["D:\\Sample Tests\\Reload\\src\\app\\components\\login\\login.component.ts","D:\\Sample Tests\\Reload\\src\\app\\components\\login\\login.component.html"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ValidateService} from '../../services/validate.service';\nimport {LoginService} from '../../services/login.service';\nimport {UserObj} from '../../models/userObj';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  error = '';\n\n  constructor(private validateService: ValidateService, private route: Router, private service: LoginService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  login(email, password, check) {\n    if (email !== '' && password !== '') {\n      if (email === 'admin') {\n        // const user: UserObj = {} as UserObj;\n        // user.email = email;\n        // user.password = password;\n        // this.service.loginAdmin(user)\n        //   .subscribe((res: any) => {\n        //     sessionStorage.setItem('key', res.token);\n        //     if (res.value.type === 'admin') {\n        //       if (check){\n        //         localStorage.setItem('loginType', '1');\n        //       }\n        //       sessionStorage.setItem('loginType', '1');\n        //       this.validateService.login();\n        //       this.route.navigate(['admin']);\n        //     } else {\n        //       if (check){\n        //         localStorage.setItem('loginType', '2');\n        //       }\n        //       sessionStorage.setItem('loginType', '2');\n        //       this.validateService.login();\n        //       this.route.navigate(['driver']);\n        //     }\n        //   }, (err) => {\n        //     this.error = (`Code ${err.status}, Error was: ${err.error.errorMessage}`);\n        //   });\n        console.log(check);\n        if (check){\n          localStorage.setItem('loginType', '1');\n        }\n        sessionStorage.setItem('loginType', '1');\n        this.validateService.login();\n        this.route.navigate(['admin']);\n\n      } else {\n        console.log(check);\n        if (check){\n          localStorage.setItem('loginType', '2');\n        }\n        sessionStorage.setItem('loginType', '2');\n        this.validateService.login();\n        this.route.navigate(['driver']);\n      }\n    }\n    this.error = 'Values Cannot Be Empty';\n  }\n}\n","<div class=\"container\">\n  <div class=\"login-box\">\n\n    <h2>Login</h2>\n    <form>\n      <div class=\"form-group\">\n        <label i18n=\"@@loginEmail\" for=\"email\">Email: <span class=\"error\">{{error}}</span></label>\n        <input required #loginEmail type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\">\n      </div>\n      <div class=\"form-group\">\n        <label i18n=\"@@loginPassword\" for=\"pwd\">Password:</label>\n        <input  required #loginPassword type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\"\n               name=\"pswd\">\n      </div>\n      <div class=\"form-group form-check\">\n        <label class=\"form-check-label\">\n          <input  #check class=\"form-check-input\" type=\"checkbox\" name=\"remember\"> Remember me\n        </label>\n      </div>\n      <button i18n=\"@@loginBtn\" type=\"button\" (click)=\"login(loginEmail.value, loginPassword.value, check.checked)\"\n              class=\"btn btn-primary\">Submit\n      </button>\n    </form>\n  </div>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}