{"ast":null,"code":"import { Component } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/validate.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/login.service\";\nexport class SignUpComponent {\n  constructor(validateService, route, service) {\n    this.validateService = validateService;\n    this.route = route;\n    this.service = service;\n    this.error = '';\n  }\n\n  ngOnInit() {} // Create a new Admin\n\n\n  signUp(email, password, passwordRe) {\n    if (email !== '' && password !== '' && passwordRe !== '') {\n      if (password === passwordRe) {\n        // const user: UserObj = {} as UserObj;\n        // user.email = email;\n        // user.password = password;\n        // this.service.createAdmin(user)\n        //   .subscribe((res: any) => {\n        //     alert(`Successfully Added. Please Sign In`);\n        //     this.route.navigate(['login']);\n        //   }, (err) => {\n        //     alert((`Code ${err.status}, Error was: ${err.error.errorMessage}`));\n        //   });\n        alert(`Successfully Added. Please Sign In`);\n        this.route.navigate(['login']);\n      } else {\n        this.error = 'Passwords Does Not Match';\n      }\n    } else {\n      this.error = 'Values Cannot Be Empty';\n    }\n  }\n\n}\n\nSignUpComponent.ɵfac = function SignUpComponent_Factory(t) {\n  return new (t || SignUpComponent)(i0.ɵɵdirectiveInject(i1.ValidateService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LoginService));\n};\n\nSignUpComponent.ɵcmp = i0.ɵɵdefineComponent({\n  type: SignUpComponent,\n  selectors: [[\"app-sign-up\"]],\n  decls: 24,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"login-box\"], [1, \"form-group\"], [\"for\", \"email\"], [1, \"error\"], [\"required\", \"\", \"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", \"name\", \"email\", 1, \"form-control\"], [\"signUpEmail\", \"\"], [\"for\", \"pwd\"], [\"required\", \"\", \"type\", \"password\", \"id\", \"pwd\", \"placeholder\", \"Enter password\", \"name\", \"pswd\", 1, \"form-control\"], [\"signUpPassword\", \"\"], [\"for\", \"pwdre\"], [\"required\", \"\", \"type\", \"password\", \"id\", \"pwdre\", \"placeholder\", \"Enter password\", \"name\", \"pswd\", 1, \"form-control\"], [\"signUpPasswordRe\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function SignUpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"SignUp\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\");\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵelementStart(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Email: \");\n      i0.ɵɵelementStart(8, \"span\", 4);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5, 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 2);\n      i0.ɵɵelementStart(13, \"label\", 7);\n      i0.ɵɵtext(14, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 8, 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 2);\n      i0.ɵɵelementStart(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Confirm Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 11, 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function SignUpComponent_Template_button_click_22_listener() {\n        i0.ɵɵrestoreView(_r3);\n\n        const _r0 = i0.ɵɵreference(11);\n\n        const _r1 = i0.ɵɵreference(16);\n\n        const _r2 = i0.ɵɵreference(21);\n\n        return ctx.signUp(_r0.value, _r1.value, _r2.value);\n      });\n      i0.ɵɵtext(23, \"Submit \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate(ctx.error);\n    }\n  },\n  styles: [\".login-box[_ngcontent-%COMP%] {\\r\\n  padding: 2%;\\r\\n  margin-top: 5%;\\r\\n  border-radius: 10px;\\r\\n  box-shadow: 0 12px 15px 0 rgba(0, 0, 0, .24), 0 17px 50px 0 rgba(0, 0, 0, .19)\\r\\n}\\r\\n.error[_ngcontent-%COMP%]{\\r\\n  color: red;\\r\\n  font-size: small;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zaWduLXVwL3NpZ24tdXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsY0FBYztFQUNkLG1CQUFtQjtFQUNuQjtBQUNGO0FBQ0E7RUFDRSxVQUFVO0VBQ1YsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zaWduLXVwL3NpZ24tdXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4ubG9naW4tYm94IHtcclxuICBwYWRkaW5nOiAyJTtcclxuICBtYXJnaW4tdG9wOiA1JTtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIGJveC1zaGFkb3c6IDAgMTJweCAxNXB4IDAgcmdiYSgwLCAwLCAwLCAuMjQpLCAwIDE3cHggNTBweCAwIHJnYmEoMCwgMCwgMCwgLjE5KVxyXG59XHJcbi5lcnJvcntcclxuICBjb2xvcjogcmVkO1xyXG4gIGZvbnQtc2l6ZTogc21hbGw7XHJcbn1cclxuIl19 */\"]\n});\n/*@__PURE__*/\n\n(function () {\n  i0.ɵsetClassMetadata(SignUpComponent, [{\n    type: Component,\n    args: [{\n      selector: 'app-sign-up',\n      templateUrl: './sign-up.component.html',\n      styleUrls: ['./sign-up.component.css']\n    }]\n  }], function () {\n    return [{\n      type: i1.ValidateService\n    }, {\n      type: i2.Router\n    }, {\n      type: i3.LoginService\n    }];\n  }, null);\n})();","map":{"version":3,"sources":["D:\\Sample Tests\\Reload\\src\\app\\components\\sign-up\\sign-up.component.ts","D:\\Sample Tests\\Reload\\src\\app\\components\\sign-up\\sign-up.component.html"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ValidateService} from \"../../services/validate.service\";\nimport {Router} from \"@angular/router\";\nimport {UserObj} from \"../../models/userObj\";\nimport {LoginService} from \"../../services/login.service\";\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  error = '';\n\n  constructor(private validateService: ValidateService, private route: Router, private service: LoginService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  // Create a new Admin\n  signUp(email, password, passwordRe) {\n    if (email !== '' && password !== '' && passwordRe !== '') {\n      if (password === passwordRe) {\n        // const user: UserObj = {} as UserObj;\n        // user.email = email;\n        // user.password = password;\n        // this.service.createAdmin(user)\n        //   .subscribe((res: any) => {\n        //     alert(`Successfully Added. Please Sign In`);\n        //     this.route.navigate(['login']);\n        //   }, (err) => {\n        //     alert((`Code ${err.status}, Error was: ${err.error.errorMessage}`));\n        //   });\n        alert(`Successfully Added. Please Sign In`);\n        this.route.navigate(['login']);\n      } else {\n        this.error = 'Passwords Does Not Match';\n      }\n    } else {\n      this.error = 'Values Cannot Be Empty';\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"login-box\">\n\n    <h2>SignUp</h2>\n    <form>\n      <div class=\"form-group\">\n        <label for=\"email\">Email: <span class=\"error\">{{error}}</span></label>\n        <input required #signUpEmail type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pwd\">Password:</label>\n        <input required #signUpPassword type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\"\n               name=\"pswd\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pwdre\">Confirm Password:</label>\n        <input required #signUpPasswordRe type=\"password\" class=\"form-control\" id=\"pwdre\" placeholder=\"Enter password\"\n               name=\"pswd\">\n      </div>\n        <button type=\"button\"\n              (click)=\"signUp(signUpEmail.value, signUpPassword.value, signUpPasswordRe.value)\"\n              class=\"btn btn-primary\">Submit\n      </button>\n    </form>\n  </div>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}